{"name": "test_add_to_cart_from_listing[chromium]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.inner_text: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\".PurchaseWithoutPayment__Number\")", "trace": "page_fixture = <Page url='https://garwin.ru/cabinet/purchase/09fb709b-8a0c-4e52-94ca-6435515669c9'>, base_url = 'https://garwin.ru'\n\n    @pytest.mark.smoke\n    def test_add_to_cart_from_listing(page_fixture, base_url):\n        cart_page = CartPage(page_fixture)\n        autorization = AutorizationModalElement(page_fixture)\n        cart_page.add_to_cart(base_url)\n        cart_page.open(base_url)\n        cart_page.click_order_button()\n        autorization.cart_autorization_send_code()\n        code = autorization.get_autorization_code_mail_ru()\n        autorization.complete_autorization(code)\n        cart_page.click_order_button()\n        #заполняем все поля, выбираем уточнить у менеджера, прописываем комментарий слово \"test\"\n        time.sleep(2)\n        page_fixture.locator('input[type=\"text\"].kit-input.Field__Input').nth(0).fill(\"test\")\n        page_fixture.locator('input[type=\"tel\"].kit-input.Field__Input').nth(0).fill(\"+7 (999) 999-99-99\")\n        page_fixture.get_by_text(\"Уточнить у менеджера\").nth(0).click()\n        page_fixture.locator('.kit-textarea.Field__Textarea').fill(\"!!! TEST !!!\")\n        # нажимаем оформить заказ\n        page_fixture.get_by_text(\"Оформить заказ\").nth(0).click()\n        # Извлекаем номер заказа .PurchaseWithoutPayment__Number извлечь нужно часть текста, после \"Номер заказа: \"\n>       order_number = page_fixture.locator(\".PurchaseWithoutPayment__Number\").inner_text().split(\"Номер заказа: \")[1]\n\ntests\\test_create_order.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:16509: in inner_text\n    self._sync(self._impl_obj.inner_text(timeout=timeout))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:444: in inner_text\n    return await self._frame.inner_text(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:618: in inner_text\n    return await self._channel.send(\"innerText\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x00000205194958B0>, cb = <function Channel.send.<locals>.<lambda> at 0x000002051B163B00>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.inner_text: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\".PurchaseWithoutPayment__Number\")\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "steps": [{"name": "Добавляю товар(stm) в корзину", "status": "passed", "parameters": [{"name": "url", "value": "'https://garwin.ru'"}], "start": 1724939670992, "stop": 1724939674987}, {"name": "Открываю https://garwin.ru/cart", "status": "passed", "start": 1724939674987, "stop": 1724939676791}, {"name": "Нажимаю на кнопку 'Оформить заказ'", "status": "passed", "start": 1724939676791, "stop": 1724939677997}, {"name": "Отправляю код авторизации", "status": "passed", "start": 1724939677997, "stop": 1724939680064}, {"name": "Авторизуюсь через mail.ru", "status": "passed", "start": 1724939680064, "stop": 1724939690395}, {"name": "Завершаю авторизацию", "status": "passed", "parameters": [{"name": "code", "value": "'0204'"}], "start": 1724939690395, "stop": 1724939692463}, {"name": "Нажимаю на кнопку 'Оформить заказ'", "status": "passed", "start": 1724939692463, "stop": 1724939693511}], "parameters": [{"name": "browser_name", "value": "'chromium'"}], "start": 1724939670991, "stop": 1724939730695, "uuid": "0662a049-4b2f-452c-906b-2eab55416d92", "historyId": "a50273ec62acdfbdbbf58f509cdc25ab", "testCaseId": "00ecfab835b6aaa6043d9ace2485538a", "fullName": "tests.test_create_order#test_add_to_cart_from_listing", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "host", "value": "garagenote-234"}, {"name": "thread", "value": "11032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}